name: Terraform deploy kubernetes cluster

on:
  push:
    paths:
      - 'terraform_gcp/**'
      - '.github/workflows/TerraformGCP.yml'
    branches:
      - main
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  BUCKET_NAME: mondybucketgcp # Replace with you bucket name.
  SA_NAME: git-490@tidy-vent-384809.iam.gserviceaccount.com  # Replace with you service account.
  CLUSTER_NAME: mondyspout-clusterk8s # Replace with you cluster name (you_cluster_name-clusterk8s).
  REGION: us-central1 # Replace with you region.
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  REPO: dmonakh/Wordpress-Tekton-atK8s-inGCP # Replace with you repo (user/repo).

jobs:
  terraform-CI:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform_gcp

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Decode credentials
        run: echo "${{ secrets.GCP_CREDENTIALS }}" | base64 -d > credentials_file.json

      - name: Authenticate with Google Cloud
        run: |
          gcloud config set account ${SA_NAME}
          gcloud auth activate-service-account --key-file=credentials_file.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Create bucket if dosn't exists
        env:
          SCRIPT_DIR: ${{ github.workspace }}/terraform_gcp/scripts
        run: bash  $SCRIPT_DIR/create-bucket.sh
          
      - name: terraform init
        run: terraform init

      - name: terraform plan
        id: plan
        run: terraform plan -lock=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" 
      
      - name: terraform apply 
        if: "!contains(github.event.head_commit.message, 'destroy')"
        run: terraform apply -lock=false -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}"

      - name: Terraform Destroy
        if: contains(github.event.head_commit.message, 'destroy')
        run: terraform destroy -lock=false -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}"

  terraform-CD:
    needs: 
      - terraform-CI
    if: "!contains(github.event.head_commit.message, 'destroy') "
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform_gcp

    steps:
    - name: Clon Rep
      uses: actions/checkout@v3

    - name: Decode credentials
      run: echo "${{ secrets.GCP_CREDENTIALS }}" | base64 -d > credentials_file.json

    - name: Authenticate with Google Cloud
      run: |
        gcloud config set account ${SA_NAME}
        gcloud auth activate-service-account --key-file=credentials_file.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

    - name: Auth Plugin for cluster
      uses: simenandre/setup-gke-gcloud-auth-plugin@v1

    - name: Get kubeconfig 
      run: gcloud container clusters get-credentials $CLUSTER_NAME --region=$REGION --project=${{ secrets.GCP_PROJECT_ID }}

    - name: Install Tekton
      if: contains(github.event.head_commit.message, 'init')
      env:
        DOCKER_USERNAME : ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD : ${{ secrets.DOCKER_PASSWORD }}
        SCRIPT_DIR: ${{ github.workspace }}/terraform_gcp/scripts
      run: bash  $SCRIPT_DIR/install-tekton.sh

    - name: Wait for 60 seconds
      if: contains(github.event.head_commit.message, 'init')
      run: sleep 60s

    - name: Create Webhook
      if: contains(github.event.head_commit.message, 'init')
      env:
        SCRIPT_DIR: ${{ github.workspace }}/terraform_gcp/scripts
      run: |
        external_ip=$(kubectl get svc ingress-nginx-controller -n ingress-nginx  -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "External IP: $external_ip"
        bash $SCRIPT_DIR/add-webhook.sh $external_ip
    
    - name: Create empty commit
      if: contains(github.event.head_commit.message, 'init')
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git pull
        git commit --allow-empty -m "Empty commit"
        git push

    - name: Wait for 5 minutes
      run: sleep 300s

    - name: Check Service
      run: kubectl get service 
